---
name: Lint and test workflow
on:
  push:
    branches: ['*', '!push-action/*']
  pull_request:
    branches: ['*', '!push-action/*']
jobs:
  quality:
    name: Lint code
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python environment
        uses: khanlab/actions/.github/actions/action-setup_task-installPyProject@v0.3.6
        with:
          python-version: '3.10'
      - name: yamlfix
        run: poetry run poe yamlfix-check
      - name: ruff
        run: poetry run poe ruff-lint-check
      - name: snakefmt
        run: poetry run poe snakefmt-check
  dryrun-test:
    runs-on: ubuntu-latest
    needs: [quality]
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - name: Setup python environments
        uses: khanlab/actions/.github/actions/action-setup_task-installPyProject@v0.3.6
        with:
          python-version: ${{ matrix.python-version }}
          install-library: true
      - name: Test minimum input
        run: poetry run poe dryrun_test
  wetrun-test:
    runs-on: ubuntu-latest
    needs: [quality]
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - name: Setup python environments
        uses: khanlab/actions/.github/actions/action-setup_task-installPyProject@v0.3.6
        with:
          python-version: ${{ matrix.python-version }}
          install-library: true
      - name: Test MNI Template baseline with autoafids output
        run: poetry run poe wetrun_test
    
