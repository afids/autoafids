[tool.poetry]
name = "autoafids"
version = "1.1.0"
description = "End-to-end SnakeBIDS workflow for landmark regression and derivative apps"
readme = "README.md"
license = "MIT"
authors = [
    "Alaa Taha <ataha24@uwo.ca>"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
snakebids = "0.14.0"
nilearn = "^0.10.3"
antspyx = "^0.5.3"
tensorflow = [
    { version="<2.16.0", python = "<3.11" },
]
tensorflow-io-gcs-filesystem = [
    { version="^0.31.0", python = "<3.12" },
]
scikit-image = "^0.19.3"
appdirs = "^1.4.4"
snakemake = [
    { version=">=7.20,<8", python = "<3.11" },
]
pulp = { version="<2.8.0", python = "<3.11" }
scipy = ">=1.11"
numpy = "1.21.6"
psutil = "^7.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
poethepoet = "^0.21.1"
ruff = "^0.0.282"
snakefmt = "^0.8.4"
yamlfix = "^1.11.0"

[tool.poetry.scripts]
autoafids = "autoafids.run:app.run"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
setup = "pre-commit install"
ruff-lint = "ruff check --fix autoafids"
ruff-lint-check = "ruff check autoafids"
snakefmt = "snakefmt autoafids"
snakefmt-check = "snakefmt --check autoafids"
quality = ["yamlfix", "ruff-lint", "snakefmt"]
quality-check = ["yamlfix-check", "ruff-lint-check", "snakefmt-check"]
test = [
    "dryrun_test",
    "wetrun_test"
]

[tool.poe.tasks.dryrun_test]
shell = """
python ./autoafids/run.py ./tests/data/ ./tests/data/derivatives/ participant \
     --participant-label 001 -np --force-output
"""

[tool.poe.tasks.wetrun_test]
shell = """
python ./autoafids/run.py ./tests/data ./tests/data/derivatives/ participant \
     --modality T1w --participant-label 002 --cores all --force-output && \
python ./tests/test_fcsv_output.py --autoafids_fcsv \
    ./tests/data/derivatives/sub-002/afids-cnn/*.fcsv \
    --baseline_fcsv ./tests/sub-002*.fcsv
"""

[tool.poe.tasks.yamlfix]
shell = """
find . -type f \\( \
    -iname \\*.yaml -o -iname \\*.yml ! -iname snakemake* \
    ! -iname snakebids* \
\\) -exec yamlfix {} \\;
"""

[tool.poe.tasks.yamlfix-check]
shell = """
find . -type f \\( \
    -iname \\*.yaml -o -iname \\*.yml ! -iname snakemake* \
    ! -iname snakebids* \
\\) -exec yamlfix --check {} \\;
"""

[tool.ruff]
select = ["E", "W", "N", "RUF", "I", "UP"]
line-length = 79
builtins = ["snakemake"]

[tool.snakefmt]
line_length = 79
include = '\.smk$|^Snakefile'